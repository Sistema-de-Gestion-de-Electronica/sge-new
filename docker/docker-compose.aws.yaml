version: "3.9"

networks:
  traefik-net:
    name: traefik-net
    driver: bridge

volumes:
  data:
  letsencrypt:

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-net"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"
      - "--ping=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    environment:
      - TZ=${TZ}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/traefik.yml:ro
      - ./docker/traefik/dynamic.yml:/configuration/dynamic.yml:ro
      - ./pass:/user-credentials:ro
      - letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
    networks:
      - traefik-net

  keycloak-db:
    image: postgres:17
    container_name: keycloak-db
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: ${KC_DB_NAME}
      POSTGRES_USER: ${KC_DB_USER}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - ./docker/db/keycloak_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - traefik-net
    depends_on:
      - traefik

  keycloak:
    image: bitnami/keycloak:25-debian-12
    container_name: keycloak
    user: root
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_DATABASE_HOST: keycloak-db
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: ${KC_DB_NAME}
      KEYCLOAK_DATABASE_USER: ${KC_DB_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME: ${AUTH_HOST}
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: edge
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${AUTH_HOST}`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - traefik-net
    depends_on:
      - keycloak-db

  db-sge:
    image: postgres:17.4-alpine3.21
    container_name: db-sge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - data:/var/lib/postgresql/data
      - ./docker/db/dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - traefik-net
    depends_on:
      - traefik

  app-sge:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    container_name: app-sge
    environment:
      TZ: ${TZ}
      PORT: 3000

      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-sge:5432/${POSTGRES_DB}

      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: https://${APP_HOST}
      NODE_TLS_REJECT_UNAUTHORIZED: 0

      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ISSUER: https://${AUTH_HOST}/realms/master

      SMTP_MAIL_EMISOR: ${SMTP_MAIL_EMISOR}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sge-frontend.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.sge-frontend.entrypoints=websecure"
      - "traefik.http.routers.sge-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sge-frontend.service=sge-frontend-service"
      - "traefik.http.services.sge-frontend-service.loadbalancer.server.port=3000"
    restart: unless-stopped
    depends_on:
      db-sge:
        condition: service_healthy
    networks:
      - traefik-net
    volumes:
      - ./:/app
      - /app/node_modules

